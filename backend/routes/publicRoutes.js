// routes/publicRoutes.js - NOU FI»òIER
const express = require('express');
const router = express.Router();
const pool = require('../config/db');

// ‚úÖ ENDPOINT PUBLIC pentru produse (fƒÉrƒÉ autentificare)
router.get('/products', async (req, res) => {
  try {
    console.log('üõçÔ∏è Getting public products...');
    
    // SelecteazƒÉ doar produsele care sunt √Æn stoc »ôi publice
    const [results] = await pool.query(`
      SELECT 
        id,
        name,
        description,
        price,
        category,
        featured_image_url as image,
        stock,
        eco_badge,
        rating,
        created_at
      FROM products 
      WHERE stock > 0 OR stock IS NULL
      ORDER BY created_at DESC
    `);
    
    console.log('‚úÖ Public products retrieved:', results.length);
    res.json(results);
    
  } catch (error) {
    console.error('‚ùå Error getting public products:', error);
    res.status(500).json({ 
      success: false,
      error: 'Eroare la √ÆncƒÉrcarea produselor' 
    });
  }
});

// ‚úÖ ENDPOINT PUBLIC pentru servicii (deja existent dar sƒÉ fie sigur)
router.get('/services', async (req, res) => {
  try {
    console.log('üßΩ Getting public services...');
    
    const [results] = await pool.query(`
      SELECT 
        id,
        name,
        description,
        price,
        price_unit,
        duration,
        category,
        image_url as image,
        is_available,
        is_popular,
        rating,
        reviews_count
      FROM services 
      WHERE is_available = 1 OR is_available IS NULL
      ORDER BY is_popular DESC, created_at DESC
    `);
    
    console.log('‚úÖ Public services retrieved:', results.length);
    res.json(results);
    
  } catch (error) {
    console.error('‚ùå Error getting public services:', error);
    res.status(500).json({ 
      success: false,
      error: 'Eroare la √ÆncƒÉrcarea serviciilor' 
    });
  }
});

module.exports = router;